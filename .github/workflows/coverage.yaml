---
  name: coverage
  on:
    push:
      branches:
        - main
      paths:
        - 'src/**.py'
        - 'tests/**.py'
        - '.github/workflows/coverage.yaml'
    pull_request:
      branches:
        - "**"
      paths:
        - 'src/**.py'
        - 'tests/**.py'
        - '.github/workflows/coverage.yaml'

  jobs:
    # TODO(apexDev37): Define reusable setup workflow.
    measure_coverage:

      name: Codecov
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os:
            - ubuntu-latest
          python-version:
            - "3.12"
          toxenv:
            - coverage

      services:
        postgres:
          image: postgres:16.3-alpine3.20
          ports:
            - 5432:5432
          options: >-
            --health-cmd="pg_isready -U postgres"
            --health-interval=10s
            --health-timeout=5s
            --health-retries=5
          env:
            POSTGRES_DB: ${{ secrets.DB_NAME }}
            POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
            POSTGRES_USER: ${{ secrets.DB_USER }}

      steps:
        - uses: actions/checkout@v4
        - name: Set up Python CI
          uses: ./.github/actions/setup-python-ci
          with:
            python-version: ${{ matrix.python-version }}

        - name: Run tests + coverage
          env:
            TOX_ENV: ${{ matrix.toxenv }}

            # env variables.
            ALLOWED_HOSTS: ${{ vars.ALLOWED_HOSTS }}
            DB_ENGINE: ${{ vars.DB_ENGINE }}
            DB_HOST: ${{ vars.DB_HOST }}
            DB_PORT: ${{ vars.DB_PORT }}
            DEBUG: ${{ vars.DEBUG }}
            ENVIRONMENT: ${{ vars.ENVIRONMENT }}
            # secrets variable.
            AFRICAS_TALKING_API_KEY: ${{ secrets.AFRICAS_TALKING_API_KEY }}
            AFRICAS_TALKING_USERNAME: ${{ secrets.AFRICAS_TALKING_USERNAME }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_USER: ${{ secrets.DB_USER }}
            OIDC_RP_CLIENT_ID: ${{ secrets.OIDC_RP_CLIENT_ID }}
            OIDC_RP_CLIENT_SECRET: ${{ secrets.OIDC_RP_CLIENT_SECRET }}
            SECRET_KEY: ${{ secrets.SECRET_KEY }}

          run: tox run

        - name: Upload results to Codecov
          uses: codecov/codecov-action@v4.6.0
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            fail_ci_if_error: true
            flags: unittests,integration
            os: linux
