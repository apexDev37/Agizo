---
name: Python CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

jobs:
  quality:

    name: Quality Assurance
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.12"
        toxenv:
          - lint-py
          - lint-codebase
          - django42
          - django50

    services:
      postgres:
        image: postgres:16.3-alpine3.20
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DB_USER }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package manager
        run: python3 -m pip install -r requirements/pip.txt
      - name: Install CI dependencies
        run: python3 -m pip install -r requirements/ci.txt

      - name: Run Tests
        env:
          TOX_ENV: ${{ matrix.toxenv }}

          # env variables.
          ALLOWED_HOSTS: ${{ vars.ALLOWED_HOSTS }}
          DEBUG: ${{ vars.DEBUG }}
          ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          DB_ENGINE: ${{ vars.DB_ENGINE }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT }}
          # secrets variable.
          AFRICAS_TALKING_API_KEY: ${{ secrets.AFRICAS_TALKING_API_KEY }}
          AFRICAS_TALKING_USERNAME: ${{ secrets.AFRICAS_TALKING_USERNAME }}
          OIDC_RP_CLIENT_ID: ${{ secrets.OIDC_RP_CLIENT_ID }}
          OIDC_RP_CLIENT_SECRET: ${{ secrets.OIDC_RP_CLIENT_SECRET }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

        run: tox run
